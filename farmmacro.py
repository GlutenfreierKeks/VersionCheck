import customtkinter as ctk
import threading
import time
import minescript
import random
import sys
import pyautogui
import base64
import requests
import keyboard
from datetime import datetime, timezone

LOCAL_VERSION = "1.1.1"
VERSION_URL = "https://raw.githubusercontent.com/GlutenfreierKeks/VersionCheck/main/version.txt"
BLACKLIST_URL = "https://raw.githubusercontent.com/GlutenfreierKeks/VersionCheck/main/blacklist.txt"


encoded_url = b'aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTQwOTgyMTY4MTUzMDE3NTU2MC9jNkx2V2VkTDNHTldxYlA0NnlKRU8xc0FnaDNnT01RbVBFanAwb3dkRVkxNU44SW5tS0E2WlduWm5FeGVzcDYzaHZvcQ=='

def send_discord_log(message):
    webhook_url = base64.b64decode(encoded_url).decode()
    payload = {"content": message}
    headers = {'Content-Type': 'application/json'}
    try:
        response = requests.post(webhook_url, json=payload, headers=headers)
        if response.status_code != 204:
            print(f"Error 1: {response.status_code} {response.text}")
        else:
            print("Logging in.")
    except Exception as e:
        print(f"Error 2: {e}")

def current_utc_time():
    return datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S UTC")

def check_version():
    try:
        r = requests.get(VERSION_URL, timeout=5)
        if r.status_code == 200:
            latest_version = r.text.strip()
            if latest_version != LOCAL_VERSION:
                print(f"New version available. Please Check the DC.")
                sys.exit()
            else:
                print(f"Version {LOCAL_VERSION}. Starting Gluten Macro Made by GlutenfreierKeks.")
        else:
            print("Could not check version, server not responding.")
    except Exception as e:
        print("Error during version check:", e)

def get_blacklisted_users(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        return response.text.splitlines()
    except requests.RequestException as e:
        print(f"Blacklist Error. Ask in the DC : {e}")
        return []

player = minescript.player_name()
blacklisted_users = get_blacklisted_users(BLACKLIST_URL)

if player in blacklisted_users:
    send_discord_log(f"‚ùå **Blacklist Alert**\nSpieler: `{player}`\nZeit: `{current_utc_time()}`\nStatus: Geblacklisted - Programm wurde beendet.")
    print("You are blacklisted")
    sys.exit()
else:
    send_discord_log(f"‚úÖ **Programmstart**\nSpieler: `{player}`\nZeit: `{current_utc_time()}`\nStatus: Nicht geblacklisted")



# Farb-Setup
DARK_BG = "#1e1e2f"
BOX_BG = "#2e2e40"
ACCENT_PURPLE = "#a970ff"
TEXT_COLOR = "#ffffff"

ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("dark-blue")


class LoopBox(ctk.CTkFrame):
    def __init__(self, master, title: str, description: str, content_builder=None, loop_fn=None,
                 player_name=None, used_modules=None, **kwargs):
        self.player_name = player_name
        self.used_modules = used_modules
        super().__init__(master, **kwargs)
        self.stop_event = threading.Event()
        self.thread = None
        self.loop_fn = loop_fn
        self.title = title
        self.description = description
        self.content_builder = content_builder
        self.player_name = player_name
        self.used_modules = used_modules

        self.configure(fg_color=BOX_BG, corner_radius=15)

        # Titel
        self.header_frame = ctk.CTkFrame(self, fg_color="transparent")
        self.header_frame.pack(fill="x", padx=10, pady=(10, 5))

        self.title_label = ctk.CTkLabel(self.header_frame, text=self.title, font=("Arial", 20, "bold"), text_color=ACCENT_PURPLE)
        self.title_label.pack(side="left", fill="x", expand=True)

        # Beschreibung
        self.desc_label = ctk.CTkLabel(self, text=self.description, font=("Arial", 14), text_color=TEXT_COLOR)
        self.desc_label.pack(padx=10, anchor="w")

        # Benutzerdefinierter Inhalt
        self.content_frame = ctk.CTkFrame(self, fg_color="#252536", corner_radius=10)
        self.content_frame.pack(fill="x", padx=10, pady=10)

        if self.content_builder:
            self.content_builder(self.content_frame)

        # Steuerkn√∂pfe
        self.button_frame = ctk.CTkFrame(self, fg_color="transparent")
        self.button_frame.pack(fill="x", padx=10, pady=(0, 10))

        self.start_button = ctk.CTkButton(self.button_frame, text="Start", command=self.start_loop, fg_color=ACCENT_PURPLE, hover_color="#8a5cd1")
        self.start_button.pack(side="right", padx=5)

        self.stop_button = ctk.CTkButton(self.button_frame, text="Stop", command=self.stop_loop, fg_color="#444", hover_color="#666")
        self.stop_button.pack(side="right", padx=5)

    def start_loop(self):
        if not self.thread or not self.thread.is_alive():
            self.stop_event.clear()

            # Module zum verwendeten Modulen hinzuf√ºgen
            if self.used_modules is not None:
                if self.title not in self.used_modules:
                    self.used_modules.append(self.title)

            # Sofort Webhook senden
            if self.player_name:
                msg = (
                    f"‚ñ∂Ô∏è **Modul gestartet**\n"
                    f"Spieler: `{self.player_name}`\n"
                    f"Modul: `{self.title}`\n"
                    f"Zeit: `{current_utc_time()}`"
                )
                send_discord_log(msg)

            self.thread = threading.Thread(target=self.loop_fn_wrapper, daemon=True)
            self.thread.start()

    def loop_fn_wrapper(self):
        try:
            self.loop_fn(lambda: not self.stop_event.is_set())
        finally:
            self.stop_event.clear()

    def stop_loop(self):
        print(f"[{self.title}] Stopping")
        self.stop_event.set()

class GlutenMacroApp(ctk.CTk):
    def __init__(self):
        super().__init__()
        self.player_name = minescript.player_name()
        self.used_modules = []
        self.title("GlutenMacro")
        self.geometry("450x700")
        self.configure(fg_color=DARK_BG)

        self.used_modules = []
        self.player_name = minescript.player_name()


        self.grid_rowconfigure(1, weight=1)
        self.grid_columnconfigure(0, weight=1)

        # Top-Leiste
        self.top_bar = ctk.CTkFrame(self, height=50, fg_color=BOX_BG, corner_radius=0)
        self.top_bar.grid(row=0, column=0, sticky="ew")
        self.top_bar.grid_columnconfigure(0, weight=1)
        self.top_bar.grid_columnconfigure(1, weight=0)

        self.logo_label = ctk.CTkLabel(self.top_bar, text="üß¨ GlutenMacro", font=("Arial", 22, "bold"), text_color=ACCENT_PURPLE)
        self.logo_label.grid(row=0, column=0, padx=20, pady=10, sticky="w")

        self.version_label = ctk.CTkLabel(self.top_bar, text="Alpha", font=("Arial", 16), text_color="#aaa")
        self.version_label.grid(row=0, column=1, padx=20, pady=10, sticky="e")

        # Scrollbereich
        self.scrollable_frame = ctk.CTkScrollableFrame(self, fg_color="transparent")
        self.scrollable_frame.grid(row=1, column=0, sticky="nsew", padx=15, pady=15)


        
        self.boxes = []

        # Beispiel: 10 unterschiedliche Boxen
        self.add_loopbox(
            "Cactus Tower",
            """Build a Cactus Tower.\n
        You need 64 of the following items in your Hotbar Slots:\n
        1-2: Normal Full Block\n
        3-4: Sand\n
        5-7: Cactus\n
        8: Iron Bar or Fences\n
        9: Golden Apple to position yourself""",
            self.CactusTower,
            self.CactusTowerLoop
        )
        self.add_loopbox(
        "Spawner Buy",
        "Buys and drops spawners from /shop. You need 20 free Inventory Slots",
        self.ChestItemClicker,
        self.ChestItemClickerLoop
        )
        self.add_loopbox("Spawner Sell", "Cycles through your yaw/pitch values to sell the Spawners (Check DC for tutorial)", self.LookController, self.LookControllerLoop)
        self.add_loopbox("Spawner Drop", "Drops the Items in the GUI where your mouse is", self.SpawnerDrop, self.SpawnerDropLoop)
        self.add_loopbox("Commandexecutor", "Executes a command in a loop", self.Commandexecutor, self.CommandexecutorLoop)
        self.add_loopbox("Anti AFK", "Prevents you from getting kicked for AFK", self.AntiAFK, self.AntiAFKLoop)
        # Hotkey zum Abbrechen
        self.bind("<c>", lambda event: self.stop_all_loops())

    def add_loopbox(self, title, desc, builder, loop_fn):
        box = LoopBox(self.scrollable_frame,
                    title=title,
                    description=desc,
                    content_builder=builder,
                    loop_fn=loop_fn,
                    player_name=self.player_name,
                    used_modules=self.used_modules)
        box.pack(fill="x", padx=10, pady=10)
        self.boxes.append(box)


    def stop_all_loops(self):
        for box in self.boxes:
            box.stop_loop()

    def on_close(self):
        # Am Ende alle genutzten Module senden
        if self.used_modules:
            modules_list = "\n".join(f"- {modul}" for modul in self.used_modules)
            msg = (
                f"üõë **Programm beendet**\n"
                f"Spieler: `{self.player_name}`\n"
                f"Zeit: `{current_utc_time()}`\n"
                f"Verwendete Module:\n{modules_list}"
            )
            send_discord_log(msg)
        self.stop_all_loops()
        self.destroy()

    def capture_slot_position(self):
        def worker():
            print("Move Your Mouse Above the Buy Button (Green Glass Thing)")
            time.sleep(3)
            x, y = pyautogui.position()
            self.item_slot_x.set(x)
            self.item_slot_y.set(y)
            print(f"Slot-Position set: ({x}, {y})")

        threading.Thread(target=worker, daemon=True).start()

    def capture_target_position(self):
        def worker():
            print("Move Your Mouse Above Your inventory Slot where spawners end up if you buy them")
            time.sleep(3)
            x, y = pyautogui.position()
            self.move_target_x.set(x)
            self.move_target_y.set(y)
            print(f"Set target Slot: ({x}, {y})")

        threading.Thread(target=worker, daemon=True).start()

    def ChestItemClicker(self, frame):
        self.chest_click_cooldown = ctk.DoubleVar(value=1.0)

        # Geschwindigkeit-Slider
        slider = ctk.CTkSlider(frame, from_=0.001, to=5.0, number_of_steps=2000, variable=self.chest_click_cooldown)
        slider.pack(fill="x", padx=10, pady=(10, 5))

        label_var = ctk.StringVar(value=f"{self.chest_click_cooldown.get():.2f} s")
        label = ctk.CTkLabel(frame, textvariable=label_var)
        label.pack(anchor="w", padx=10)

        slider.configure(command=lambda v: label_var.set(f"{float(v):.2f} s"))

        # Slot-Koordinaten-Eingabe (wo er 20x klicken soll)
        self.item_slot_x = ctk.IntVar(value=0)
        self.item_slot_y = ctk.IntVar(value=0)
        coord_label = ctk.CTkLabel(frame, text="Item-Position (Slot):")
        coord_label.pack(anchor="w", padx=10)

        slot_frame = ctk.CTkFrame(frame, fg_color="transparent")
        slot_frame.pack(fill="x", padx=10, pady=(0, 5))

        slot_x_entry = ctk.CTkEntry(slot_frame, textvariable=self.item_slot_x, placeholder_text="X")
        slot_x_entry.pack(side="left", expand=True, padx=(0, 5))

        slot_y_entry = ctk.CTkEntry(slot_frame, textvariable=self.item_slot_y, placeholder_text="Y")
        slot_y_entry.pack(side="left", expand=True, padx=(5, 0))

        get_slot_button = ctk.CTkButton(frame, text="üìå Set Position", command=self.capture_slot_position)
        get_slot_button.pack(fill="x", padx=10, pady=(0, 5))

        # Zielposition f√ºr Mausbewegung nach dem Klicken
        self.move_target_x = ctk.IntVar(value=0)
        self.move_target_y = ctk.IntVar(value=0)
        move_label = ctk.CTkLabel(frame, text="Zielposition (nach dem Klicken):")
        move_label.pack(anchor="w", padx=10)

        move_frame = ctk.CTkFrame(frame, fg_color="transparent")
        move_frame.pack(fill="x", padx=10, pady=(0, 5))

        move_x_entry = ctk.CTkEntry(move_frame, textvariable=self.move_target_x, placeholder_text="X")
        move_x_entry.pack(side="left", expand=True, padx=(0, 5))

        move_y_entry = ctk.CTkEntry(move_frame, textvariable=self.move_target_y, placeholder_text="Y")
        move_y_entry.pack(side="left", expand=True, padx=(5, 0))

        get_move_button = ctk.CTkButton(frame, text="üìå Set Position", command=self.capture_target_position)
        get_move_button.pack(fill="x", padx=10, pady=(0, 5))


    def ChestItemClickerLoop(self, is_running):
        def interruptible_sleep(duration):
            step = 0.01  # Feinere Abfrage
            elapsed = 0
            while elapsed < duration:
                if not is_running() or keyboard.is_pressed("c"):
                    return False
                time.sleep(step)
                elapsed += step
            return True

        while is_running():
            if keyboard.is_pressed("c"):
                print("STOP C WAS PRESSED")
                break

            x = self.item_slot_x.get()
            y = self.item_slot_y.get()
            cooldown = self.chest_click_cooldown.get()

            print(f"Buying 20x 64 Spawners ({x}, {y}) with {cooldown:.2f}s delay between clicks")

            for i in range(20):
                if not is_running() or keyboard.is_pressed("c"):
                    return
                pyautogui.click(x, y)
                if not interruptible_sleep(cooldown):
                    return

            # Mausbewegung nach Zielposition
            target_x = self.move_target_x.get()
            target_y = self.move_target_y.get()
            pyautogui.moveTo(target_x, target_y, duration=0.1)  # Schneller bewegen

            # Shift+X dr√ºcken
            pyautogui.keyDown("shift")
            pyautogui.press("x")
            pyautogui.keyUp("shift")
            print("Hotkey Shift+X pressed.")

            # Zus√§tzliche Pause vor n√§chster Runde (optional)
            if not interruptible_sleep(0.3):  # Damit kein Dauerfeuer
                break




    def SpawnerDrop(self, frame):
        # Cooldown-Slider
        self.spawner_cooldown = ctk.DoubleVar(value=2.0)

        slider = ctk.CTkSlider(
            frame,
            from_=0.5,
            to=20.0,
            number_of_steps=39,
            variable=self.spawner_cooldown
        )
        slider.pack(fill="x", padx=10, pady=(10, 5))

        # Live-Label f√ºr Slider-Wert
        self.spawner_cooldown_label_var = ctk.StringVar(value=f"{self.spawner_cooldown.get():.2f} s")
        cooldown_label = ctk.CTkLabel(frame, textvariable=self.spawner_cooldown_label_var)
        cooldown_label.pack(anchor="w", padx=10)

        # Update-Callback f√ºr Slider
        def update_label(value):
            self.spawner_cooldown_label_var.set(f"{float(value):.2f} s")

        slider.configure(command=update_label)

    def SpawnerDropLoop(self, is_running):
        def interruptible_sleep(duration, is_running):
            step = 0.1
            elapsed = 0
            while elapsed < duration:
                if not is_running():
                    return
                time.sleep(step)
                elapsed += step

        while is_running():
            pyautogui.keyDown('shift')
            pyautogui.press('x')
            pyautogui.keyUp('shift')
            cooldown = self.spawner_cooldown.get()
            interruptible_sleep(cooldown, is_running)

    def LookController(self, frame):
        self.look_values = []  # Liste der Yaw/Pitch-Wertepaare

        self.yaw_var = ctk.StringVar(value="")
        self.pitch_var = ctk.StringVar(value="")

        # Eingabefelder
        yaw_entry = ctk.CTkEntry(frame, textvariable=self.yaw_var, placeholder_text="Yaw (-180 to 180)")
        yaw_entry.pack(fill="x", padx=10, pady=(10, 5))

        pitch_entry = ctk.CTkEntry(frame, textvariable=self.pitch_var, placeholder_text="Pitch (-180 to 180)")
        pitch_entry.pack(fill="x", padx=10, pady=(0, 5))

        # Buttons
        button_frame = ctk.CTkFrame(frame, fg_color="transparent")
        button_frame.pack(fill="x", padx=10, pady=(5, 10))

        add_button = ctk.CTkButton(button_frame, text="‚ûï Add", command=self.add_look_value)
        add_button.pack(side="left", expand=True, padx=(0, 5))

        current_view_button = ctk.CTkButton(button_frame, text="üìå Add Current View", command=self.add_current_orientation)
        current_view_button.pack(side="left", expand=True, padx=(5, 5))

        remove_button = ctk.CTkButton(button_frame, text="üóëÔ∏è Remove Last", command=self.remove_look_value)
        remove_button.pack(side="left", expand=True, padx=(5, 0))

        # Textbox zur Anzeige der gespeicherten Werte
        self.look_listbox = ctk.CTkTextbox(frame, height=120)
        self.look_listbox.pack(fill="both", padx=10, pady=(0, 5))
        self.update_look_listbox()

    def add_current_orientation(self):
        try:
            orientation = minescript.player_orientation()
            yaw, pitch = round(orientation[0], 1), round(orientation[1], 1)
            self.look_values.append((yaw, pitch))
            self.update_look_listbox()
        except Exception as e:
            self.look_listbox.configure(state="normal")
            self.look_listbox.insert("end", f"Try again: {e}\n")
            self.look_listbox.configure(state="disabled")

    def add_look_value(self):
        yaw_str = self.yaw_var.get()
        pitch_str = self.pitch_var.get()

        # Leere Eingaben verhindern
        if yaw_str == "" or pitch_str == "":
            self.look_listbox.configure(state="normal")
            self.look_listbox.insert("end", "‚ö†Ô∏è Please enter both Yaw and Pitch\n")
            self.look_listbox.configure(state="disabled")
            return

        try:
            yaw = float(yaw_str)
            pitch = float(pitch_str)
            if -180 <= yaw <= 180 and -180 <= pitch <= 180:
                self.look_values.append((yaw, pitch))
                self.update_look_listbox()
            else:
                self.look_listbox.configure(state="normal")
                self.look_listbox.insert("end", "‚ùå Values must be between -180 and 180\n")
                self.look_listbox.configure(state="disabled")
        except ValueError:
            self.look_listbox.configure(state="normal")
            self.look_listbox.insert("end", "‚ùå Invalid number format\n")
            self.look_listbox.configure(state="disabled")

    def remove_look_value(self):
        if self.look_values:
            self.look_values.pop()
            self.update_look_listbox()
        else:
            self.look_listbox.insert("end", "‚ö†Ô∏è List is already empty\n")

    def update_look_listbox(self):
        self.look_listbox.configure(state="normal")
        self.look_listbox.delete("1.0", "end")
        self.look_listbox.insert("end", "Yaw | Pitch\n")
        self.look_listbox.insert("end", "-" * 20 + "\n")
        for yaw, pitch in self.look_values:
            self.look_listbox.insert("end", f"{yaw:+06.1f} | {pitch:+06.1f}\n")
        self.look_listbox.configure(state="disabled")


    def LookControllerLoop(self, is_running):
        index = 0
        while is_running():
            if not self.look_values:
                time.sleep(0.5)
                continue

            yaw, pitch = self.look_values[index]
            time.sleep(5)
            minescript.player_set_orientation(yaw, pitch)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            pyautogui.move(0, -80)
            time.sleep(0.2)
            pyautogui.rightClick()


            index = (index + 1) % len(self.look_values)

            sleep_time = 1.0
            step = 0.1
            elapsed = 0
            while elapsed < sleep_time and is_running():
                time.sleep(step)
                elapsed += step


    def AntiAFK(self, frame):
        self.afk_cooldown = ctk.DoubleVar(value=60.0)

        # Slider f√ºr Cooldown
        slider = ctk.CTkSlider(frame, from_=1, to=300, number_of_steps=300, variable=self.afk_cooldown)
        slider.pack(fill="x", padx=10, pady=(10, 5))

        self.afk_label_var = ctk.StringVar(value=f"{self.afk_cooldown.get():.0f} s")
        label = ctk.CTkLabel(frame, textvariable=self.afk_label_var)
        label.pack(anchor="w", padx=10)

        def update_label(value):
            self.afk_label_var.set(f"{float(value):.0f} s")

        slider.configure(command=update_label)

        # Checkboxen f√ºr Aktionen
        self.afk_jump = ctk.BooleanVar(value=True)
        self.afk_look = ctk.BooleanVar(value=False)
        self.afk_sneak = ctk.BooleanVar(value=False)

        jump_check = ctk.CTkCheckBox(frame, text="Jump", variable=self.afk_jump)
        jump_check.pack(anchor="w", padx=10)

        look_check = ctk.CTkCheckBox(frame, text="Look Around", variable=self.afk_look)
        look_check.pack(anchor="w", padx=10)

        sneak_check = ctk.CTkCheckBox(frame, text="Sneak", variable=self.afk_sneak)
        sneak_check.pack(anchor="w", padx=10)
 
    def AntiAFKLoop(self, is_running):

        def interruptible_sleep(duration, is_running):
            step = 0.1
            elapsed = 0
            while elapsed < duration:
                if not is_running():
                    return
                time.sleep(step)
                elapsed += step

        while is_running():
            # Liste aktiver Aktionen sammeln
            actions = []
            if self.afk_jump.get():
                actions.append("jump")
            if self.afk_look.get():
                actions.append("look")
            if self.afk_sneak.get():
                actions.append("sneak")

            if not actions:
                time.sleep(1)
                continue

            action = random.choice(actions)

            if action == "jump":
                minescript.player_press_jump(True)
                time.sleep(0.1)
                minescript.player_press_jump(False)

            elif action == "look":
                # Zuf√§llige Blickrichtung
                yaw = random.uniform(-90, 90)
                pitch = random.uniform(-30, 30)
                minescript.player_set_orientation(yaw, pitch)

            elif action == "sneak":
                minescript.player_press_sneak(True)
                time.sleep(0.5)
                minescript.player_press_sneak(False)

            cooldown = self.afk_cooldown.get()
            interruptible_sleep(cooldown, is_running)
    
    def Commandexecutor(self, frame):
        # Eingabefeld f√ºr Command
        self.command_var = ctk.StringVar()
        entry = ctk.CTkEntry(frame, textvariable=self.command_var, placeholder_text="Enter command...")
        entry.pack(fill="x", padx=10, pady=(10, 5))

        # Cooldown-Slider
        self.command_cooldown = ctk.DoubleVar(value=1.0)

        slider = ctk.CTkSlider(
            frame,
            from_=0.1,
            to=10.0,
            number_of_steps=300,
            variable=self.command_cooldown
        )
        slider.pack(fill="x", padx=10, pady=(5, 2))

        # Live-Label f√ºr Slider-Wert
        self.cooldown_label_var = ctk.StringVar(value=f"{self.command_cooldown.get():.2f} s")
        cooldown_label = ctk.CTkLabel(frame, textvariable=self.cooldown_label_var)
        cooldown_label.pack(anchor="w", padx=10)

        # Update-Callback f√ºr Slider
        def update_label(value):
            self.cooldown_label_var.set(f"{float(value):.2f} s")

        slider.configure(command=update_label)


    def CommandexecutorLoop(self, is_running):
        def interruptible_sleep(duration, is_running):
            step = 0.1
            elapsed = 0
            while elapsed < duration:
                if not is_running():
                    return
                time.sleep(step)
                elapsed += step

        while is_running():
            command = self.command_var.get().strip()
            if command:
                minescript.execute(f"{command}")  # Send command hahahaha
            cooldown = self.command_cooldown.get()
            interruptible_sleep(cooldown, is_running)


    def CactusTower(self, frame):
        self.cactus_slider = ctk.DoubleVar(value=0.5)

        slider = ctk.CTkSlider(frame, from_=0.01, to=1.0, number_of_steps=50, variable=self.cactus_slider)
        slider.pack(fill="x", padx=10, pady=10)

        # StringVar zur Anzeige des Werts
        self.slider_label_var = ctk.StringVar(value=f"{self.cactus_slider.get():.2f} s")

        value_label = ctk.CTkLabel(frame, textvariable=self.slider_label_var)
        value_label.pack()

        # Aktualisierung √ºber die Variable
        def update_label(value):
            self.slider_label_var.set(f"{float(value):.2f} s")

        slider.configure(command=update_label)


    def CactusTowerLoop(self, is_running):
        def interruptible_sleep(duration, is_running):
            step = 0.05
            elapsed = 0
            while elapsed < duration:
                if not is_running():
                    return
                time.sleep(step)
                elapsed += step

        while is_running():
            minescript.player_inventory_select_slot(0)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(2)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(4)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(4)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(0)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(2)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(4)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(4)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(0)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(2)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(4)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(4)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(0)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)

            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(3)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(5)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(5)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(1)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(3)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(5)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(5)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(1)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(3)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(5)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(5)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(1)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)

            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(3)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(6)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(6)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(0)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(3)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(6)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(6)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(0)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(3)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(6)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 90)
            minescript.player_inventory_select_slot(6)
            if not is_running():
                break
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(0)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 90)
            time.sleep(0.2)
            minescript.player_press_jump(True)
            time.sleep(0.2)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            time.sleep(0.2)
            minescript.player_press_jump(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-45, 45)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(0, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(45, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(133, 42)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(180, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-133, 45)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-90, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_inventory_select_slot(7)
            if not is_running():
                break
            minescript.player_set_orientation(-90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(143, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(90, 64)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.player_set_orientation(-40, 50)
            minescript.player_press_use(True)
            minescript.player_press_use(False)
            interruptible_sleep(self.cactus_slider.get(), is_running)
            minescript.echo('Made by GlutenfreierKeks')


if __name__ == "__main__":
    check_version()
    app = GlutenMacroApp()
    app.protocol("WM_DELETE_WINDOW", app.on_close)
    app.mainloop()
